#
# Python build system configuration
# https://peps.python.org/pep-0518/
#

[build-system]
# requires = ["poetry-core"]
# build-backend = "poetry.core.masonry.api"
requires = [
  "hatchling",
  # "hatch-regex-commit",
  "versioningit",
]
build-backend = "hatchling.build"

[project]
name = "eyrie"
dynamic = ["version"]
description = "This is where I sit beneath the clouds."
readme = "README.md"
requires-python = ">=3.12.2"
license = "MIT"
keywords = []
authors = [{ name = "Ada Wright", email = "ada@hpk.io" },]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/hipikat/eyrie#readme"
Issues = "https://github.com/hipikat/eyrie/issues"
Source = "https://github.com/hipikat/eyrie"

#
# Coverage - https://coverage.readthedocs.io/
#
[tool.coverage.run]
source_pkgs = ["eyrie", "tests"]
branch = true
parallel = true
omit = [
  "src/eyrie/__about__.py",
]

[tool.coverage.paths]
eyrie = ["src/eyrie", "*/eyrie/src/eyrie"]
tests = ["tests", "*/eyrie/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

#
# versioningit - https://github.com/jwodder/versioningit
#
# [tool.hatch.version]
# source = "versioningit"

# [tool.versioningit]
# default-version = "0.0.0+unknown"

# [tool.versioningit.format]
# distance = "{next_version}.dev{distance}+{vcs}{rev}"
# dirty = "{version}+dirty"
# distance-dirty = "{next_version}.dev{distance}+{vcs}{rev}.dirty"

# [tool.versioningit.format]
# # Format used when there have been commits since the most recent tag:
# distance = "{base_version}.post{distance}+{vcs}{rev}"
# # Example formatted version: 1.2.3.post42+ge174a1f

# # Format used when there are uncommitted changes:
# dirty = "{base_version}+d{build_date:%Y%m%d}"
# # Example formatted version: 1.2.3+d20230922

# # Format used when there are both commits and uncommitted changes:
# distance-dirty = "{base_version}.post{distance}+{vcs}{rev}.d{build_date:%Y%m%d}"
# # Example formatted version: 1.2.3.post42+ge174a1f.d20230922


#
# Poetry - https://python-poetry.org/
# Only used for dependency management
#
[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
wagtail = "^6.0.2"
click = "^8.1.7"
versioningit = "^3.1.0"


[tool.poetry.group.dev.dependencies]
ipython = "^8.23.0"

#
# Hatch configuration - https://hatch.pypa.io/
#
[tool.hatch]
env.virtual = "var/venvs"
version.source = "versioningit"


# Environment: Default
[tool.hatch.envs.default]
path = "var/venvs/eyrie-dev"
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]


# Environment: Test
[tool.hatch.envs.test]
dependencies = [
  "coverage[toml]",
  "pytest",
  "pytest-cov",
]

[tool.hatch.envs.test.scripts]
cov = 'pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=pkg --cov=tests'


# Environment: Types
[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/eyrie tests}"


# Environment matrix
# https://hatch.pypa.io/1.9/config/environment/advanced/#matrix
[[tool.hatch.envs.all.matrix]]
python = ["3.12",]


#
# versioningit - TODO:url
#
[tool.versioningit]
default-version = "0.0.0+unknown"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}+{vcs}{rev}"
dirty = "{version}+dirty"
distance-dirty = "{next_version}.dev{distance}+{vcs}{rev}.dirty"